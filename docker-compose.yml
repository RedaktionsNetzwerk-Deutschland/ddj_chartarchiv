services:
  web:
    build: .
    volumes:
      - ./media:/code/media
      - ./static_data:/code/staticfiles
      
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: always
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.0
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
          - haproxy

  fetch_datawrapper:
    profiles: ["manual"]
    build: .
    command: python manage.py fetch_datawrapper
    volumes:
      - .:/code
      - ./media:/code/media
      
    env_file:
      - .env
    entrypoint: ["/code/entrypoint.sh"]
    depends_on:
      - db
    networks:
          - haproxy

volumes:
  static_data:
    driver: local 

networks:
  haproxy:
    external: true
    name: haproxy
