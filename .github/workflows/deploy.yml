name: Deploy to Server

on:
  push:
    branches:
      - main # Oder dein Hauptbranch, z.B. master

jobs:
  deploy:
    runs-on: ubuntu-latest # Verwendet einen von GitHub gehosteten Runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Holt deinen Code in den Runner

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master # Eine beliebte Action f√ºr SSH-Befehle
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }} # Standardport 22, wenn nicht anders angegeben
          script: |
            echo "Starting deployment..."
            cd /home/christoph/webarchiv # WECHSEL ZUM PROJEKTVERZEICHNIS AUF DEM SERVER
            echo "Current git status:"
            git status

            echo "Pulling latest changes..."
            git pull origin main # Oder dein Hauptbranch
            
            echo "Stopping current services..."
            sudo docker compose -f docker-compose.yml down
            
            echo "Building and starting web service..."
            sudo docker compose -f docker-compose.yml up -d --build web
            
            echo "Cleaning up old Docker images and containers..."
            sudo docker image prune -af
            sudo docker container prune -f
            
            echo "Deployment successful!"